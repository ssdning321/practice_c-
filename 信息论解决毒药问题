有 buckets 桶液体，其中 正好 有一桶含有毒药，其余装的都是水。它们从外观看起来都一样。为了弄清楚哪只水桶含有毒药，你可以喂一些猪喝，通过观察猪是否会死进行判断。不幸的是，你只有 minutesToTest 分钟时间来确定哪桶液体是有毒的。

喂猪的规则如下：

选择若干活猪进行喂养
可以允许小猪同时饮用任意数量的桶中的水，并且该过程不需要时间。
小猪喝完水后，必须有 minutesToDie 分钟的冷却时间。在这段时间里，你只能观察，而不允许继续喂猪。
过了 minutesToDie 分钟后，所有喝到毒药的猪都会死去，其他所有猪都会活下来。
重复这一过程，直到时间用完。
给你桶的数目 buckets ，minutesToDie 和 minutesToTest ，返回在规定时间内判断哪个桶有毒所需的 最小 猪数。

思想1：信息论
  我们一共可以进行n轮实验（n = minutesToTest / minutesToDie）：
经过所有实验，一只小猪能有多少种状态？第一轮就死、第二轮死、...、第n轮死，以及生还，所以一共有n + 1种状态
n + 1种状态所携带的信息为log_2(n + 1)比特，这也是一只小猪最多提供的信息量
而”buckets瓶液体中哪一瓶是毒“这件事，也有buckets种可能性，所以需要的信息量是log_2(buckets)
注：以上所有事件、状态都是先验等概的，所以可以直接对2取对数得到信息熵

因此一定存在一种“合理设计”的实验，使得我们只要有k只猪猪：满足 k * log_2(n + 1) >= log_2(buckets)时，则我们一定能得到足够的信息量去判断哪一瓶是毒。

思想2：维度
  如果可以进行n次实验，把这个buckets<=x^n buckets刚好小于x的n次方 此时需要x值小猪，分别每一个小猪遍历一个维度，其中一个维度等于常量，然后喝下当前维度所包含的所有水；
  每一个小猪代表一个维度的一个常量值，x个小猪死亡的时间点可以定位一个一维度点，该点就越是毒药；当然，如果小猪倒数第二次喝下之后没死亡，最后一个一定是毒药；
 思想3：x进制 类似2维度.
